/*
 *  TCSS 305 - Easy Street
 *  Spring 2016
 */
package model;

import java.util.ArrayList;
import java.util.Map;

/**
 * The truck class, handles the decision making of the truck vehicle.
 * Trucks can move over Streets, Lights and Cross walks. 
 * Trucks do not stop at lights, but stop at cross walks.
 * Trucks do not die.
 * 
 * @author noxor
 * @version 1.0
 *
 */
public final class Truck extends AbstractVehicle {
    /**
     * Constructs a Truck, with x,y and a direction.
     * 
     * @param theX The X value of the truck.
     * @param theY The Y value of the truck.
     * @param theDir The initial direction of the truck.
     */
    public Truck(final int theX, final int theY, final Direction theDir) {
        super(theX, theY, theDir);
    }
    
    @Override // streets lights cross walks
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
        boolean isPassing = false;
        if (theTerrain == Terrain.STREET) {
            isPassing = true;
        }
        if (theTerrain == Terrain.LIGHT) {
            isPassing = true;
        }
        if (theTerrain == Terrain.CROSSWALK) {
            if (theLight == Light.RED) {
                isPassing = false;
            } else { 
                isPassing = true;
            }
        }
        return isPassing;
    }
    
    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
        Direction newDir = myDir;
        myValidDir = new ArrayList<>();
        for (final Map.Entry<Direction, Terrain> entry : theNeighbors.entrySet()) {
            if (entry.getValue() == Terrain.STREET 
                            || entry.getValue() == Terrain.LIGHT 
                            || entry.getValue() == Terrain.CROSSWALK) {
                if (entry.getKey() != myDir.reverse()) {
                    myValidDir.add(entry.getKey());                     
                }
            }
        }
        if (myValidDir.size() > 0) {
            newDir = myValidDir.get(myRandGen.nextInt(myValidDir.size()));            
        } else {
            newDir = myDir.reverse();
        }
        return newDir;
    }
    
}
